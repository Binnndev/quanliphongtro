import React, { useState, useEffect, use } from "react";
import AnimatedSignature from "../components/AnimatedSignature";
import MainContainer from "../components/MainContainer";
import Button from "../components/Button";
import UserIcon from "../components/UserIcon";
import { useNavigate, useParams } from "react-router-dom"; // Th√™m useParams n·∫øu c·∫ßn l·∫•y ID t·ª´ URL
import axios from "axios"; // N·∫øu b·∫°n s·ª≠ d·ª•ng axios ƒë·ªÉ g·ªçi API

// Import c√°c component n·ªôi dung tab v√† form m·ªõi
import RenterForm from "../components/RenterForm";
import MembersTabContent from "../components/MembersTabContent";
import ContractTabContent from "../components/ContractTabContent";
import MemberForm from "../components/MemberForm"; // Import form th√†nh vi√™n

const RenterPage = () => {
    const navigate = useNavigate();
    const { roomId } = useParams(); // L·∫•y ID ph√≤ng t·ª´ URL
    console.log(roomId);  // Ki·ªÉm tra gi√° tr·ªã c·ªßa roomId

    const [activeTab, setActiveTab] = useState('renter'); // V√≠ d·ª• b·∫Øt ƒë·∫ßu ·ªü tab th√†nh vi√™n

    // State cho d·ªØ li·ªáu (v√≠ d·ª•)
    const [renterData, setRenterData] = useState(null);
    const [membersData, setMembersData] = useState([]);
    const [contractData, setContractData] = useState(null);

    // State qu·∫£n l√Ω hi·ªÉn th·ªã form Th√™m/S·ª≠a th√†nh vi√™n
    const [showMemberForm, setShowMemberForm] = useState(false);
    const [editingMember, setEditingMember] = useState(null); // null: Th√™m m·ªõi, object: S·ª≠a

    // --- G·ªçi API ƒë·ªÉ l·∫•y d·ªØ li·ªáu ---
    useEffect(() => {
        const fetchData = async () => {
            if (roomId) {
                console.log(`RenterPage: Fetching data for room ${roomId}`);
                setIsLoading(true); // B·∫Øt ƒë·∫ßu loading t·ªïng
                try {
                    const results = await Promise.allSettled([
                        getRenterData(roomId),
                        getMembersData(roomId),
                        getContractData(roomId)
                    ]);
                     // X·ª≠ l√Ω k·∫øt qu·∫£...
                    if (results[0].status === 'rejected') { console.warn("Kh√¥ng t·∫£i ƒë∆∞·ª£c renter data."); setRenterData(null); }
                    if (results[1].status === 'rejected') { console.error("L·ªói t·∫£i members data."); setMembersData([]); }
                    if (results[2].status === 'rejected') { console.warn("Kh√¥ng t·∫£i ƒë∆∞·ª£c contract data."); setContractData(null); }

                } catch (error) {
                    console.error("L·ªói fetch data trang:", error);
                    setRenterData(null); setMembersData([]); setContractData(null);
                } finally {
                    setIsLoading(false); // K·∫øt th√∫c loading t·ªïng
                }
            }
        };
        fetchData();
    }, [roomId]);

    const [isLoading, setIsLoading] = useState(true);
    

    const getRenterData = async (roomId) => {
        const response = await axios.get(`/api/tenants/room/${roomId}/representative`);
        if (response.status === 200 && response.data) {
            // G√°n c·∫£ id ƒë·ªÉ d√πng nh·∫•t qu√°n trong component con n·∫øu c·∫ßn
            setRenterData({ ...response.data, id: response.data.MaKhachThue });
        } else {
           setRenterData(null); // Quan tr·ªçng: set null n·∫øu kh√¥ng t√¨m th·∫•y
           // Kh√¥ng throw error ·ªü ƒë√¢y n·ªØa n·∫øu 404 l√† h·ª£p l·ªá (ph√≤ng tr·ªëng)
            if (response.status !== 404 && response.status !== 204) {
               throw new Error(`Failed to get renter data, status: ${response.status}`);
            }
        }
    };
    const getMembersData = async (roomId) => {
        const response = await axios.get(`/api/tenants/room/${roomId}/members`);
        if (response.status === 200) {
           setMembersData(response.data.map(m => ({ ...m, id: m.MaKhachThue })));
        } else {
            throw new Error(`Failed to get members data, status: ${response.status}`);
        }
    };

    const getContractData = async (roomId) => {
        try {
            const response = await axios.get(`/api/contracts/room/${roomId}`); // G·ªçi API ƒë·ªÉ l·∫•y d·ªØ li·ªáu h·ª£p ƒë·ªìng
            if (response.status === 200) {
                setContractData(response.data); // Gi·∫£ l·∫≠p d·ªØ li·ªáu h·ª£p ƒë·ªìng
            } else {
                console.error("L·ªói khi l·∫•y d·ªØ li·ªáu h·ª£p ƒë·ªìng:", response.statusText);
            }
        } catch (error) {
            console.error("L·ªói khi g·ªçi API:", error);
        }
    };
       

    // --- H√†m x·ª≠ l√Ω cho Member Form ---
    const handleShowAddMemberForm = () => {
        if (!renterData) { // V·∫´n n√™n ki·ªÉm tra c√≥ renter ch√≠nh ch∆∞a
            alert("Vui l√≤ng th√™m ng∆∞·ªùi thu√™ ch√≠nh tr∆∞·ªõc."); return;
        }
        setEditingMember(null);
        setShowMemberForm(true); // M·ªü form d√†nh cho th√†nh vi√™n
    };

    const handleShowEditMemberForm = (memberToEdit) => {
        console.log("RenterPage: handleShowEditMemberForm ƒë∆∞·ª£c g·ªçi v·ªõi memberToEdit:", memberToEdit); // Ki·ªÉm tra 5: D·ªØ li·ªáu c√≥ ƒë∆∞·ª£c truy·ªÅn ƒë√∫ng kh√¥ng?
        setEditingMember(memberToEdit); // L∆∞u d·ªØ li·ªáu th√†nh vi√™n c·∫ßn s·ª≠a
        setShowMemberForm(true); // Hi·ªán form
        console.log("RenterPage: setShowMemberForm(true) ƒë√£ ƒë∆∞·ª£c g·ªçi."); // Ki·ªÉm tra 6: State c√≥ ƒë∆∞·ª£c set kh√¥ng?
    };

    const handleCloseMemberForm = () => {
        console.log("--- RenterPage: handleCloseMemberForm ƒë∆∞·ª£c g·ªçi (t·ª´ MemberForm) ---");
        setShowMemberForm(false); // ·∫®n form
        setEditingMember(null); // Reset tr·∫°ng th√°i s·ª≠a
    };

    // --- H√ÄM X·ª¨ L√ù KHI L∆ØU TH√ÄNH C√îNG T·ª™ RENTER FORM ---
    const handleRenterSaveSuccess = (savedRenter) => {
        console.log("RenterPage: Nh·∫≠n ƒë∆∞·ª£c renter ƒë√£ l∆∞u t·ª´ RenterForm:", savedRenter);
        // C·∫≠p nh·∫≠t l·∫°i state renterData v·ªõi d·ªØ li·ªáu m·ªõi nh·∫•t
         // ƒê·∫£m b·∫£o g√°n l·∫°i id n·∫øu c·∫ßn
        setRenterData({ ...savedRenter, id: savedRenter.MaKhachThue || savedRenter.id });
        // C√≥ th·ªÉ fetch l·∫°i members ho·∫∑c contract n·∫øu vi·ªác thay ƒë·ªïi renter ·∫£nh h∆∞·ªüng
    };
    // ----------------------------------------------------

     // --- H√ÄM X·ª¨ L√ù KHI L∆ØU TH√ÄNH C√îNG T·ª™ MEMBER FORM ---
     const handleMemberSaveSuccess = (savedMember, isEditMode) => {
        console.log("RenterPage: Nh·∫≠n ƒë∆∞·ª£c member ƒë√£ l∆∞u t·ª´ MemberForm:", savedMember);
        if (isEditMode) {
            setMembersData(prev => prev.map(m =>
                String(m.id || m.MaKhachThue) === String(savedMember.MaKhachThue || savedMember.id)
                    ? { ...savedMember, id: savedMember.MaKhachThue || savedMember.id } // C·∫≠p nh·∫≠t v√† ƒë·∫£m b·∫£o c√≥ id
                    : m
            ));
        } else {
            setMembersData(prev => [...prev, { ...savedMember, id: savedMember.MaKhachThue || savedMember.id }]); // Th√™m v√† ƒë·∫£m b·∫£o c√≥ id
        }
        handleCloseMemberForm(); // ƒê√≥ng form member sau khi l∆∞u
   };
    // ----------------------------------------------------

    const handleSaveMember = async (memberFormData, isEditMode, selectedDocPhoto) => {
        const endpoint = isEditMode ? `/api/tenants/update/${editingMember.MaKhachThue}` : '/api/tenants/add';
        const method = isEditMode ? 'PATCH' : 'POST';

        console.log(`üöÄ [${method}] Calling endpoint: ${endpoint}`);

        console.log("--- Debugging Edit Save ---");
console.log("Editing Member State:", editingMember); // Ki·ªÉm tra to√†n b·ªô object
console.log("ID being used for endpoint:", editingMember?.MaKhachThue); // Ki·ªÉm tra ID
console.log("Endpoint URL constructed:", endpoint); // Ki·ªÉm tra URL cu·ªëi c√πng
console.log("HTTP Method:", method); // Ki·ªÉm tra ph∆∞∆°ng th·ª©c
console.log("Data being sent:", Object.fromEntries(memberFormData)); // Xem d·ªØ li·ªáu g·ª≠i ƒëi (l∆∞u √Ω: file s·∫Ω kh√¥ng hi·ªÉn th·ªã tr·ª±c ti·∫øp)


        try {
            // --- G·ªçi API Th·ª±c T·∫ø ---
            console.log("üì° Chu·∫©n b·ªã g·ªçi API...");
            const response = await axios({
                 method: method,
                 url: endpoint,
                 data: memberFormData,
                 headers: { 'Content-Type': 'multipart/form-data' }
            });
            console.log("‚úÖ API Response Status:", response.status);
            console.log("‚úÖ API Response Data (Raw):", response.data);

            const savedDataFromApi = response.data;
            if (!savedDataFromApi) {
                 console.error("‚ÄºÔ∏è D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API tr·ªëng!");
                 throw new Error("D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ API tr·ªëng!"); // D·ª´ng l·∫°i n·∫øu API kh√¥ng tr·∫£ v·ªÅ g√¨
            }
            console.log("üìù D·ªØ li·ªáu th·∫≠t s·ª± t·ª´ API:", savedDataFromApi);

            // --- X·ª≠ l√Ω d·ªØ li·ªáu TH·∫¨T t·ª´ API ---
            console.log("üîÑ Chu·∫©n b·ªã ƒë·ªãnh d·∫°ng d·ªØ li·ªáu TH·∫¨T...");
            // Map d·ªØ li·ªáu t·ª´ API (savedDataFromApi) sang c·∫•u tr√∫c c·∫ßn thi·∫øt cho state/UI
            // ƒê·∫£m b·∫£o c√°c tr∆∞·ªùng c·∫ßn thi·∫øt cho b·∫£ng (v√≠ d·ª•: id, name) c√≥ m·∫∑t
            const formattedMember = {
                // L·∫•y c√°c tr∆∞·ªùng tr·ª±c ti·∫øp t·ª´ API response n·∫øu t√™n kh·ªõp
                ...savedDataFromApi,
                // Map ho·∫∑c ƒë·∫£m b·∫£o c√°c tr∆∞·ªùng quan tr·ªçng cho UI t·ªìn t·∫°i
                id: savedDataFromApi.MaKhachThue || savedDataFromApi.id, // ∆Øu ti√™n MaKhachThue n·∫øu c√≥, l·∫•y ID th·∫≠t
                name: savedDataFromApi.HoTen, // Map HoTen sang name ƒë·ªÉ hi·ªÉn th·ªã nh·∫•t qu√°n
                cccd: savedDataFromApi.CCCD,
                phone: savedDataFromApi.SoDienThoai,
                email: savedDataFromApi.Email,
                dob: savedDataFromApi.NgaySinh, // Gi·ªØ nguy√™n ho·∫∑c format l·∫°i ng√†y n·∫øu c·∫ßn hi·ªÉn th·ªã kh√°c
                gender: savedDataFromApi.GioiTinh,
                notes: savedDataFromApi.GhiChu,
                // X√°c ƒë·ªãnh tr·∫°ng th√°i ·∫£nh d·ª±a tr√™n t√™n file tr·∫£ v·ªÅ t·ª´ API
                photo: savedDataFromApi.AnhGiayTo ? 'C√≥' : 'Kh√¥ng', // C·∫≠p nh·∫≠t tr·∫°ng th√°i ·∫£nh ƒë√∫ng
                documentPhotoName: savedDataFromApi.AnhGiayTo || '', // L∆∞u t√™n file ·∫£nh th·∫≠t
            };
            console.log("üëç D·ªØ li·ªáu TH·∫¨T ƒë√£ ƒë·ªãnh d·∫°ng:", formattedMember);

            // --- X√≥a b·ªè kh·ªëi code gi·∫£ l·∫≠p ·ªü ƒë√¢y ---
            // KH√îNG C√íN KH·ªêI GI·∫¢ L·∫¨P N·ªÆA

            // --- C·∫≠p nh·∫≠t state v·ªõi d·ªØ li·ªáu TH·∫¨T ---
            console.log("üîÑ Chu·∫©n b·ªã c·∫≠p nh·∫≠t state v·ªõi d·ªØ li·ªáu TH·∫¨T:", formattedMember);
            if (isEditMode) {
                console.log("   -> C·∫≠p nh·∫≠t state (ch·∫ø ƒë·ªô s·ª≠a)...");
                 // C·∫≠p nh·∫≠t logic s·ª≠a n·∫øu c·∫ßn, d√πng formattedMember
                 setMembersData(prevMembers => prevMembers.map(m => m.MaKhachThue === formattedMember.MaKhachThue ? formattedMember : m));
            } else {
                 console.log("   -> C·∫≠p nh·∫≠t state (ch·∫ø ƒë·ªô th√™m m·ªõi)...");
                 setMembersData(prevMembers => {
                     console.log("      -> State c≈©:", prevMembers);
                     // *** Th√™m d·ªØ li·ªáu TH·∫¨T ƒë√£ format v√†o state ***
                     const newState = [...prevMembers, formattedMember];
                     console.log("      -> State m·ªõi (d·ª± ki·∫øn):", newState);
                     return newState;
                 });
            }
            console.log("üü¢ ƒê√£ g·ªçi setMembersData.");

            // --- C√°c b∆∞·ªõc ti·∫øp theo ---
            console.log("üîî Chu·∫©n b·ªã hi·ªÉn th·ªã alert th√†nh c√¥ng...");
            alert(`ƒê√£ ${isEditMode ? 'c·∫≠p nh·∫≠t' : 'th√™m'} th√†nh vi√™n th√†nh c√¥ng!`);
            console.log("üëç ƒê√£ hi·ªÉn th·ªã alert.");

            console.log("üö™ Chu·∫©n b·ªã ƒë√≥ng form...");
            handleCloseMemberForm();
            console.log("üîí ƒê√£ g·ªçi handleCloseMemberForm.");

            console.log("üéâ X·ª≠ l√Ω th√†nh c√¥ng ho√†n t·∫•t trong try block.");

        } catch (error) {
            console.error("‚ùå L·ªói g·ªëc b·ªã b·∫Øt trong handleSaveMember:", error);
            let displayMessage = "ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω d·ªØ li·ªáu.";
            if (error.response) {
                console.error("‚ùå D·ªØ li·ªáu l·ªói t·ª´ server:", error.response.data);
                console.error("‚ùå Status l·ªói t·ª´ server:", error.response.status);
                displayMessage = error.response.data?.message || `L·ªói ${error.response.status} t·ª´ server`;
            } else if (error.request) {
                 console.error("‚ùå Kh√¥ng nh·∫≠n ƒë∆∞·ª£c ph·∫£n h·ªìi:", error.request);
                 displayMessage = "Kh√¥ng nh·∫≠n ƒë∆∞·ª£c ph·∫£n h·ªìi t·ª´ m√°y ch·ªß.";
            } else {
                 console.error('‚ùå L·ªói kh√°c trong qu√° tr√¨nh x·ª≠ l√Ω:', error.message);
                 displayMessage = error.message || displayMessage;
            }
            alert(`L·ªói: ${displayMessage}`);
            console.log(`(Log t·∫°i catch) ƒê√£ r∆°i v√†o catch v·ªõi l·ªói: ${displayMessage}`);
        }
    };
    // --- K·∫øt th√∫c h√†m x·ª≠ l√Ω Member Form ---

    // --- H√ÄM X·ª¨ L√ù X√ìA (C·∫¨P NH·∫¨T TR·∫†NG TH√ÅI) ---
    const handleDeleteMemberApiCall = async (memberIdToDelete) => {
        console.log(`RenterPage: Nh·∫≠n y√™u c·∫ßu x√≥a (c·∫≠p nh·∫≠t tr·∫°ng th√°i) cho ID: ${memberIdToDelete}`);
        try {
            // G·ªçi API ƒë·ªÉ th·ª±c hi·ªán soft delete (c·∫≠p nh·∫≠t NgayRoiDi/TrangThai)
            const response = await axios.delete(`/api/tenants/delete/${memberIdToDelete}`);

            console.log("RenterPage: API soft delete th√†nh c√¥ng:", response.data);

            // *** C·∫¨P NH·∫¨T STATE ƒê·ªÇ X√ìA TH√ÄNH VI√äN KH·ªéI DANH S√ÅCH HI·ªÇN TH·ªä ***
            setMembersData(prevMembers => {
                // L·ªçc b·ªè th√†nh vi√™n c√≥ ID tr√πng v·ªõi ID v·ª´a x√≥a
                const updatedMembers = prevMembers.filter(member =>
                    // So s√°nh ID nh·∫•t qu√°n (MaKhachThue ho·∫∑c id)
                    String(member.MaKhachThue || member.id) !== String(memberIdToDelete)
                );
                console.log("RenterPage: C·∫≠p nh·∫≠t state membersData sau khi x√≥a:", updatedMembers);
                return updatedMembers; // Tr·∫£ v·ªÅ m·∫£ng m·ªõi kh√¥ng ch·ª©a th√†nh vi√™n ƒë√£ x√≥a
            });

            alert(response.data.message || "C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh vi√™n th√†nh c√¥ng!");

        } catch (error) {
            console.error(`RenterPage: L·ªói khi g·ªçi API x√≥a (c·∫≠p nh·∫≠t tr·∫°ng th√°i) cho ID ${memberIdToDelete}:`, error);
            alert(`L·ªói: ${error.response?.data?.message || error.message || 'Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh vi√™n.'}`);
            // Kh√¥ng thay ƒë·ªïi state n·∫øu API th·∫•t b·∫°i
        }
    };
    // --- K·∫æT TH√öC H√ÄM X·ª¨ L√ù X√ìA ---
    
    // --- REFACTORED SOFT DELETE HANDLER ---
    const handleSoftDeleteTenant = async (tenantIdToDelete) => {
        if (!tenantIdToDelete) return;
         console.log(`RenterPage: Soft delete request for ID: ${tenantIdToDelete}`);
         try {
             const response = await axios.delete(`/api/tenants/delete/${tenantIdToDelete}`);
             const successMessage = response.data.message || "C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng!";
             const renterCurrentId = renterData?.MaKhachThue || renterData?.id;

             if (renterCurrentId && String(renterCurrentId) === String(tenantIdToDelete)) {
                 console.log("RenterPage: Main renter marked as departed.");
                 setRenterData(null); // X√≥a d·ªØ li·ªáu renter kh·ªèi state
                 alert(successMessage + " ƒêang quay l·∫°i..."); // Th√¥ng b√°o
             } else {
                 console.log("RenterPage: Member marked as departed.");
                 // X√≥a th√†nh vi√™n kh·ªèi state membersData
                 setMembersData(prev => prev.filter(m => String(m.id || m.MaKhachThue) !== String(tenantIdToDelete)));
                 alert(successMessage); // Th√¥ng b√°o cho th√†nh vi√™n
             }
         } catch (error) {
             console.error(`RenterPage: Error soft deleting tenant ID ${tenantIdToDelete}:`, error);
             alert(`L·ªói: ${error.response?.data?.message || error.message || 'Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i.'}`);
         }
    };
    // --- END SOFT DELETE HANDLER ---

    // --- H√ÄM X·ª¨ L√ù L∆ØU H·ª¢P ƒê·ªíNG (Th√™m/S·ª≠a) ---
    // H√†m n√†y ƒë∆∞·ª£c g·ªçi b·ªüi onSave c·ªßa ContractTabContent
    const handleSaveContract = async (contractFormData, isEdit, selectedFile) => {
        const contractId = isEdit ? contractData?.MaHopDong : null; // L·∫•y ID n·∫øu l√† s·ª≠a
        const endpoint = isEdit ? `/api/contracts/update/${contractId}` : '/api/contracts/add';
        // D√πng PATCH cho update th∆∞·ªùng ph√π h·ª£p h∆°n PUT
        const method = isEdit ? 'patch' : 'post';

        console.log(`RenterPage: Calling ${method} ${endpoint} for contract...`);

        try {
            const response = await axios({
                method: method,
                url: endpoint,
                data: contractFormData,
                headers: { 'Content-Type': 'multipart/form-data' }
            });

            console.log("RenterPage: Save contract response:", response.data);
            const savedContract = response.data?.contract || response.data; // Adapt based on API response

            if (!savedContract || typeof savedContract !== 'object') {
                 throw new Error("D·ªØ li·ªáu h·ª£p ƒë·ªìng tr·∫£ v·ªÅ kh√¥ng h·ª£p l·ªá.");
            }

            // C·∫≠p nh·∫≠t state v·ªõi d·ªØ li·ªáu m·ªõi nh·∫•t
            setContractData(savedContract);

            alert(`ƒê√£ ${isEdit ? 'c·∫≠p nh·∫≠t' : 'th√™m m·ªõi'} h·ª£p ƒë·ªìng th√†nh c√¥ng!`);
            // ContractTabContent s·∫Ω t·ª± chuy·ªÉn v·ªÅ display mode nh·ªù useEffect ch·∫°y l·∫°i

            // Kh√¥ng c·∫ßn return g√¨ v√¨ ContractTabContent t·ª± x·ª≠ l√Ω loading
            // return Promise.resolve(); // C√≥ th·ªÉ tr·∫£ v·ªÅ ƒë·ªÉ b√°o th√†nh c√¥ng

        } catch (error) {
            console.error("RenterPage: L·ªói khi l∆∞u h·ª£p ƒë·ªìng:", error);
            // N√©m l·ªói ƒë·ªÉ ContractTabContent c√≥ th·ªÉ b·∫Øt v√† hi·ªÉn th·ªã
             throw new Error(error.response?.data?.message || error.message || 'L·ªói l∆∞u h·ª£p ƒë·ªìng.');
        }
    };
    // --- K·∫æT TH√öC H√ÄM L∆ØU H·ª¢P ƒê·ªíNG ---

    // --- H√ÄM X·ª¨ L√ù H·ª¶Y H·ª¢P ƒê·ªíNG ---
    const handleTerminateContract = async (contractIdToTerminate) => {
        console.log(`RenterPage: Requesting termination for contract ID: ${contractIdToTerminate}`);
        const endpoint = `/api/contracts/terminate/${contractIdToTerminate}`; // Endpoint API h·ªßy
        try {
            // G·ªçi API ƒë·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh 'ƒê√£ h·ªßy'
            const response = await axios.patch(endpoint); // D√πng PATCH ƒë·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i

            console.log("RenterPage: Terminate contract response:", response.data);
            const updatedContract = response.data?.contract || response.data;
            console.log('[DEBUG] Frontend - D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c t·ª´ API h·ªßy:', updatedContract);
            console.log('[DEBUG] Frontend - FileHopDong nh·∫≠n ƒë∆∞·ª£c:', updatedContract?.FileHopDong);

            if (!updatedContract || typeof updatedContract !== 'object') {
                throw new Error("D·ªØ li·ªáu h·ª£p ƒë·ªìng tr·∫£ v·ªÅ kh√¥ng h·ª£p l·ªá sau khi h·ªßy.");
            }

            // C·∫≠p nh·∫≠t state v·ªõi h·ª£p ƒë·ªìng ƒë√£ c·∫≠p nh·∫≠t tr·∫°ng th√°i
            setContractData(updatedContract);

            alert(response.data.message || "ƒê√£ h·ªßy h·ª£p ƒë·ªìng th√†nh c√¥ng!");
            // return Promise.resolve(); // B√°o th√†nh c√¥ng

        } catch (error) {
            console.error(`RenterPage: L·ªói khi h·ªßy h·ª£p ƒë·ªìng ID ${contractIdToTerminate}:`, error);
            alert(`L·ªói: ${error.response?.data?.message || error.message || 'Kh√¥ng th·ªÉ h·ªßy h·ª£p ƒë·ªìng.'}`);
            // return Promise.reject(error); // B√°o th·∫•t b·∫°i
             throw new Error(error.response?.data?.message || error.message || 'L·ªói h·ªßy h·ª£p ƒë·ªìng.'); // N√©m l·ªói ƒë·ªÉ ContractTabContent x·ª≠ l√Ω loading
        }
    };
    // --- K·∫æT TH√öC H√ÄM H·ª¶Y H·ª¢P ƒê·ªíNG ---


    const handleTabClick = (tabName) => {
        if (showMemberForm) return; // Kh√¥ng cho chuy·ªÉn tab khi form ƒëang m·ªü (t√πy ch·ªçn)
        setActiveTab(tabName);
    };

    const tabStyle = { padding: '10px 20px', cursor: 'pointer', borderBottom: '3px solid transparent', color: '#666', fontWeight: '500' };
    const activeTabStyle = { ...tabStyle, color: '#007bff', borderBottom: '3px solid #007bff' };

    return (
        <div style={{ display: "flex", height: '100vh', overflow: 'hidden' }}>
            {/* Sidebar */}
             <div style={{ background: '#1B2428', width: "20%", minWidth: '250px', color: 'white', display: 'flex', flexDirection: 'column' }}>
                 {/* ... code sidebar ... */}
                 <div style={{ height: 84, background: '#1B2428', borderBottom: '1px #21373D solid', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '0 10px' }}>
                     <AnimatedSignature text="QU·∫¢N L√ù PH√íNG TR·ªå" />
                 </div>
                 <div style={{ flexGrow: 1, overflowY: 'auto' }}> <MainContainer /> </div>
                 <div style={{ padding: '15px', borderTop: '1px solid #21373D' }}> <input type="search" placeholder="Search" style={{ width: '100%', padding: '8px', borderRadius: '4px', border: 'none', background: '#2C3A40', color: 'white' }} /> </div>
             </div>

            {/* Right Content Area */}
            <div style={{ width: '80%', display: 'flex', flexDirection: 'column', position: 'relative', background: '#F4F4F4' }}>
                 {/* Fixed Header */}
                  <div style={{ height: 83, width: 'calc(80% - 0px)', background: 'white', borderBottom: '1px #D2D2D2 solid', display: "flex", justifyContent: 'space-between', alignItems: "center", position: 'fixed', top: 0, right: 0, zIndex: 10 }}>
                      <p style={{ fontSize: '1.5rem', fontWeight: 'bold', marginLeft: 20 }}>Th√¥ng tin kh√°ch thu√™</p>
                      <div style={{ marginRight: '20px' }}> <UserIcon /> </div>
                  </div>

                  
                    {/* === KHU V·ª∞C TAB V√Ä N√öT QUAY L·∫†I === */}
                {/* Ch·ªâ hi·ªÉn th·ªã khi kh√¥ng m·ªü form th√†nh vi√™n (ho·∫∑c logic t∆∞∆°ng t·ª± n·∫øu RenterForm gi·ªù ph·ª©c t·∫°p h∆°n) */}
                {/* Hi·ªán t·∫°i, gi·∫£ s·ª≠ ch·ªâ form th√†nh vi√™n m·ªõi ·∫©n khu v·ª±c n√†y */}
                {!showMemberForm && (
                    <div style={{
                        height: 50,
                        width: 'calc(80% - 0px)', // ƒêi·ªÅu ch·ªânh n·∫øu c·∫ßn
                        background: 'white',
                        borderBottom: '1px #E0E0E0 solid',
                        display: 'flex',
                        justifyContent: 'space-between', // ƒê·∫©y n√∫t Quay l·∫°i sang ph·∫£i
                        alignItems: 'center',
                        position: 'fixed',
                        top: 83, // Ngay d∆∞·ªõi header
                        right: 0,
                        zIndex: 9,
                        padding: '0 20px' // Padding hai b√™n
                    }}>
                        {/* --- Ph·∫ßn hi·ªÉn th·ªã c√°c Tab --- */}
                        <div style={{ display: 'flex' }}>
                            <div
                                style={activeTab === 'renter' ? activeTabStyle : tabStyle}
                                onClick={() => handleTabClick('renter')}
                            >
                                Ng∆∞·ªùi thu√™
                            </div>
                            <div
                                style={activeTab === 'member' ? activeTabStyle : tabStyle}
                                onClick={() => handleTabClick('member')}
                            >
                                Th√†nh vi√™n
                            </div>
                            <div
                                style={activeTab === 'contract' ? activeTabStyle : tabStyle}
                                onClick={() => handleTabClick('contract')}
                            >
                                H·ª£p ƒë·ªìng
                            </div>
                        </div>
                        {/* --- K·∫øt th√∫c ph·∫ßn Tab --- */}

                        {/* N√∫t Quay l·∫°i */}
                        <Button label='Quay l·∫°i' class_name='delete-btn btn' onClick={() => navigate(-1)} />
                    </div>
                )}
                 {/* === K·∫æT TH√öC KHU V·ª∞C TAB === */}

                 {/* Scrollable Content Area */}
                 {/* TƒÉng padding top n·∫øu ƒëang hi·ªÉn th·ªã form v√† kh√¥ng c√≥ tabs */}
                <div style={{ paddingTop: showMemberForm ? '90px' : '140px', flexGrow: 1, overflowY: 'auto' }}>
                    
                    {/* Fixed Tabs and Back Button Area - Ch·ªâ hi·ªÉn th·ªã khi kh√¥ng m·ªü form th√†nh vi√™n */}
                  {!showMemberForm && (
                         <>
                            {activeTab === 'renter' && (
                                // Lu√¥n render RenterForm, n√≥ s·∫Ω t·ª± x·ª≠ l√Ω add/edit mode
                                <RenterForm
                                    renterData={renterData} // Truy·ªÅn null n·∫øu l√† th√™m m·ªõi
                                    roomId={roomId}       // Lu√¥n truy·ªÅn roomId
                                    onSaveSuccess={handleRenterSaveSuccess} // Callback khi l∆∞u renter th√†nh c√¥ng
                                    onDeleteRenter={handleSoftDeleteTenant} // H√†m x·ª≠ l√Ω x√≥a/r·ªùi ƒëi
                                />
                            )}
                            {activeTab === 'member' && (
                                <MembersTabContent
                                    members={membersData}
                                    onAddMemberClick={handleShowAddMemberForm} // M·ªü MemberForm ƒë·ªÉ th√™m member
                                    onEditMemberClick={handleShowEditMemberForm} // M·ªü MemberForm ƒë·ªÉ s·ª≠a member
                                    onDeleteMember={handleSoftDeleteTenant} // H√†m x√≥a member
                                />
                            )}
                            {activeTab === 'contract' && (
                                <ContractTabContent
                                contractData={contractData}
                                roomId={roomId} // Truy·ªÅn roomId ƒë·ªÉ bi·∫øt th√™m m·ªõi cho ph√≤ng n√†o
                                onSave={handleSaveContract} // H√†m x·ª≠ l√Ω l∆∞u
                                    onTerminate={handleTerminateContract} // H√†m x·ª≠ l√Ω h·ªßy
                                    representativeTenantId={renterData?.MaKhachThue || renterData?.id}
                           />
                            )}
                         </>
                     )}
                    {/* Th√™m log ƒë·ªÉ xem gi√° tr·ªã state ngay tr∆∞·ªõc khi render */}
                    {console.log("RenterPage - Rendering content area, showMemberForm:", showMemberForm)}

                     {/* Ch·ªâ render MemberForm khi c·∫ßn th√™m/s·ª≠a TH√ÄNH VI√äN */}
                     {showMemberForm && (
                         <MemberForm
                             initialData={editingMember} // D·ªØ li·ªáu th√†nh vi√™n c·∫ßn s·ª≠a (null n·∫øu th√™m)
                             roomId={roomId}
                             // isRepresentative ph·∫£i l√† FALSE v√¨ form n√†y ch·ªâ d√πng cho th√†nh vi√™n
                             isRepresentative={false}
                             // Callback ri√™ng cho l∆∞u th√†nh vi√™n th√†nh c√¥ng
                             onSave={handleSaveMember}
                             onClose={handleCloseMemberForm}
                         />
                     )}
                </div>
            </div>
        </div>
    );
};

export default RenterPage;