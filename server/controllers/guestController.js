const { Guest } = require("../models");

// üü¢ L·∫•y danh s√°ch kh√°ch thu√™
exports.getAllGuests = async (req, res) => {
    try {
        const guests = await Guest.findAll();
        res.json(guests);
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y danh s√°ch kh√°ch:", error);
        res.status(500).json({ message: error.message });
    }
};

// üü¢ L·∫•y th√¥ng tin kh√°ch theo ID
exports.getGuestById = async (req, res) => {
    try {
        const guest = await Guest.findByPk(req.params.id);
        if (!guest) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng" });
        }
        res.json(guest);
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y th√¥ng tin kh√°ch:", error);
        res.status(500).json({ message: error.message });
    }
};

// üü¢ L·∫•y th√¥ng tin kh√°ch theo gi·ªõi t√≠nh
exports.getGuestByGender = async (req, res) => {
    try {
        const guests = await Guest.findAll({
            where: { GioiTinh: req.params.sex }
        });
        res.json(guests);
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y th√¥ng tin kh√°ch:", error);
        res.status(500).json({ message: error.message });
    }
};

// üü¢ C·∫≠p nh·∫≠t th√¥ng tin kh√°ch
exports.updateGuest = async (req, res) => {
    try {
        const guest = await Guest.findByPk(req.params.id);
        if (!guest) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng" });
        }

        await guest.update(req.body);
        res.json({ message: "C·∫≠p nh·∫≠t th√†nh c√¥ng", guest });
    } catch (error) {
        console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin kh√°ch:", error);
        res.status(500).json({ message: error.message });
    }
};

// üü¢ Th√™m kh√°ch m·ªõi
exports.createGuest = async (req, res) => {
    try {
        console.log("üìå D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", req.body);

        const { TenKH, CMND, SoDienThoai, DiaChi, Email, NgaySinh, GioiTinh, NgayDangKy, TrangThaiTaiKhoan, GhiChu, AnhGiayTo } = req.body;

        if (!TenKH || !CMND || !SoDienThoai) {
            return res.status(400).json({ message: "T√™n, CMND v√† s·ªë ƒëi·ªán tho·∫°i kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng" });
        }

        const guest = await Guest.create({
            TenKH,
            CMND,
            SoDienThoai,
            DiaChi,
            Email,
            NgaySinh,
            GioiTinh,
            NgayDangKy,
            TrangThaiTaiKhoan,
            GhiChu,
            AnhGiayTo
        });

        res.status(201).json(guest);
    } catch (error) {
        console.error("‚ùå L·ªói khi t·∫°o kh√°ch m·ªõi:", error);
        res.status(500).json({ message: error.message });
    }
};

// üü¢ Xo√° kh√°ch
exports.deleteGuest = async (req, res) => {
    try {
        const guest = await Guest.findByPk(req.params.id);
        if (!guest) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng" });
        }

        await guest.destroy();
        res.json({ message: "Xo√° kh√°ch h√†ng th√†nh c√¥ng" });
    } catch (error) {
        console.error("‚ùå L·ªói khi xo√° kh√°ch h√†ng:", error);
        res.status(500).json({ message: error.message });
    }
};
